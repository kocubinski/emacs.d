(require 'package)
(add-to-list 'package-archives
             '("marmalade" . "http://marmalade-repo.org/packages/"))
(package-initialize)

(when (not package-archive-contents)
  (package-refresh-contents))

;; Add in your own as you wish:
(defvar my-packages '(starter-kit
                      starter-kit-lisp
                      starter-kit-bindings
                      undo-tree
                      clojure-mode
                      slime
                      rainbow-delimiters
                     )
   "A list of packages to ensure are installed at launch.")

(dolist (p my-packages)
    (when (not (package-installed-p p))
        (package-install p)))

;(set-background-color "#fafafa")
;(set-face-attribute 'default nil :font "Inconsolata-14")
(set-face-attribute 'default nil :font "Dejavu Sans Mono-11:antialias=true:autohint=slight:hinting=true")
;(set-face-attribute 'default nil :font "Monospace-12:antialias=true:autohint=slight:hinting=true")
;(set-face-attribute 'default nil :font "Dejavu Sans Mono-11:antialias=true:autohint=slight:hinting=true")
;(set-face-attribute 'default nil :font "Monaco-11:antialias=true:autohint=slight:hinting=true")
;(set-face-attribute 'default nil :font "Inconsolata-15:autohint=slight;antialias=true;")
;(set-face-attribute 'default nil :font "Inconsolata-15:autohint=true;antialias=true;hinting=true")
;(set-face-attribute 'default nil :font "Inconsolata-14:hinting=true:autohint=slight;antialias=true;spacing=5")
;(set-face-attribute 'default nil :font "Ubuntu Mono-13")
;set-face-attribute 'default nil :font "Ubuntu Mono-13:hinting=true:autohint=slight;antialias=true:width=condensed")
;(set-face-attribute 'default nil :font "Ubuntu Mono-15:hinting=true:autohint=slight;antialias=true:width=condensed")
;(set-face-attribute 'default nil :font "Consolas-11:antialias=true:autohint=slight:hinting=true")

;(if (eq system-type 'windows-nt) 
;    (set-face-attribute 'default nil :font "Consolas-14")
;  (set-face-attribute 'default nil :font "Inconsolata-15"))

(defun sweyla665742 ()
  "Theme generated by Sweyla: http://themes.sweyla.com/seed/665742/"
  (interactive)
  (color-theme-install
   '(sweyla665742
     ((background-color . "#000006")
      (foreground-color . "#FFFFFF")
      (background-mode . dark)
      (border-color . "#323232")
      (cursor-color . "#FFFFFF")
      (mouse-color . "#323232"))
     (mode-line ((t (:foreground "#FFFFFF" :background "#323232"))))
     (region ((t (:background "#323232"))))

     (font-lock-comment-face ((t (:foreground "#EED47E"))))
     (font-lock-constant-face ((t (:foreground "#94FFE4"))))
     (font-lock-builtin-face ((t (:foreground "#00FF49"))))
     (font-lock-function-name-face ((t (:foreground "#2EFAFF"))))
     (font-lock-variable-name-face ((t (:foreground "#00C23B"))))
     (font-lock-keyword-face ((t (:foreground "#36ED57"))))
     (font-lock-string-face ((t (:foreground "#4790A4"))))
     (font-lock-doc-string-face ((t (:foreground "#4790A4"))))
     (font-lock-type-face ((t (:foreground "#00F8DE"))))
     )))

;(provide 'sweyla665742)

;(load-theme 'manoj-dark)

;(set-background-color "#121212")
;(set-cursor-color "#ffffff")

(global-set-key (kbd "C-,") 'other-window)
(global-set-key (kbd "C-<") 'previous-buffer)
(global-set-key (kbd "C->") 'next-buffer)
(global-set-key [C-S-tab] 'previous-buffer)
(global-set-key [C-tab] 'next-buffer)
(global-set-key "\C- " 'hippie-expand)

(setq ibuffer-shrink-to-minimum-size t)
(setq ibuffer-always-show-last-buffer nil)
(setq ibuffer-sorting-mode 'recency)
(setq ibuffer-use-header-line t)
(global-set-key [(f12)] 'ibuffer)
(global-set-key [(f11)] 'buffer-menu)
(global-set-key [(f10)] 'ido-switch-buffer)

; Map shift-tab to reduce indent
; http://stackoverflow.com/questions/2249955/emacs-shift-tab-to-left-shift-the-block/2250155#2250155
(global-set-key (kbd "<S-tab>") 'un-indent-by-removing-4-spaces)
(defun un-indent-by-removing-4-spaces ()
  "remove 4 spaces from beginning of of line"
  (interactive)
  (save-excursion
    (save-match-data
      (beginning-of-line)
      ;; get rid of tabs at beginning of line
      (when (looking-at "^\\s-+")
        (untabify (match-beginning 0) (match-end 0)))
      (when (looking-at "^    ")
        (replace-match "")))))

;(require 'init-evil)
(add-to-list 'load-path "~/.emacs.d/evil")
(require 'evil)  
(evil-mode 1)

(define-key evil-motion-state-map (kbd "<SPC>") 'evil-scroll-page-down)
(define-key evil-motion-state-map (kbd "<S-SPC>") 'evil-scroll-page-up)

(require 'clojure-mode)
(add-hook 'slime-repl-mode-hook 'clojure-mode-font-lock-setup)

(require 'auto-complete)
(add-hook 'clojure-mode-hook
          (lambda() (auto-complete-mode 1)))

(add-to-list 'auto-mode-alist '("\.cljs$" . clojure-mode))

;; coffee-mode
(add-to-list 'load-path "~/.emacs.d/coffee-mode")
(require 'coffee-mode)
(add-to-list 'auto-mode-alist '("\\.coffee$" . coffee-mode))
(add-to-list 'auto-mode-alist '("Cakefile" . coffee-mode))

(defun coffee-custom ()
  "coffee-mode-hook"
 (set (make-local-variable 'tab-width) 2))

(add-hook 'coffee-mode-hook
  '(lambda() (coffee-custom)))

;; zen coding!
(add-to-list 'load-path "~/.emacs.d/zencoding")
(require 'zencoding-mode)

(add-to-list 'load-path "~/.emacs.d/less-css-mode")
(require 'less-css-mode)

;; better php indentation
(add-hook 'php-mode-hook (lambda ()
    (defun ywb-php-lineup-arglist-intro (langelem)
      (save-excursion
        (goto-char (cdr langelem))
        (vector (+ (current-column) c-basic-offset))))
    (defun ywb-php-lineup-arglist-close (langelem)
      (save-excursion
        (goto-char (cdr langelem))
        (vector (current-column))))
    (c-set-offset 'arglist-intro 'ywb-php-lineup-arglist-intro)
    (c-set-offset 'arglist-close 'ywb-php-lineup-arglist-close)))

(setq tramp-default-method "ssh")

; disable vc-git (too slow)
(remove-hook 'find-file-hooks 'vc-find-file-hook)

(custom-set-variables
 ;; custom-set-variables was added by Custom.
 ;; If you edit it by hand, you could mess it up, so be careful.
 ;; Your init file should contain only one such instance.
 ;; If there is more than one, they won't work right.
 '(custom-safe-themes (quote ("b7553781f4a831d5af6545f7a5967eb002c8daeee688c5cbf33bf27936ec18b3" default))))
(custom-set-faces
 ;; custom-set-faces was added by Custom.
 ;; If you edit it by hand, you could mess it up, so be careful.
 ;; Your init file should contain only one such instance.
 ;; If there is more than one, they won't work right.
)

(setq inferior-lisp-program "lein trampoline cljsbuild repl-listen")
